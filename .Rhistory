getwd()
source("analysis1.Rmd")
getwd()
#source("analysis1.Rmd")
unique_case <- read.csv("data/unique_case.csv")
setwd("BIOS611-A3")
file.exists("BIOS611-A3")
setwd("C:/Users/linde/OneDrive/Desktop/BIOS611-A3")
setwd("../BIOS611-A3")
getwd()
#### Load data ####
setwd("../BIOS611-A3")
if (!dir.exists("log")) {
dir.create("log")
}
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
log <- make_logger("log/report.Rmd")
distinct_case <- complete_case %>%
distinct()
n_distinct = nrow(distinct_case)
log("Before filtering duplicate cases: %d, after %d (%0.2f%% decrease)",
n_complete,
n_distinct,
100 - 100 * n_distinct / n_complete)
write.csv(distinct_case, "data/distinct_case.csv", row.names = FALSE)
plot1 <- distinct_case %>%
group_by(birth_year) %>%
summarize(count = n()) %>%
arrange(birth_year) %>%
ggplot(aes(x = birth_year, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Dogs Born Each Year", x = "Year of Birth", y = "Number of Dogs") +
theme_minimal() +
#scale_x_continuous(limits = c(min_yr,max_yr)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
threshold <- 1000
plot2 <- distinct_case %>%
group_by(birth_year) %>%
summarize(count = n()) %>%
filter(count > threshold) %>%
arrange(birth_year) %>%
ggplot(aes(x = birth_year, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Dogs Born Each Year: Count > 1000", x = "Year of Birth", y = "Number of Dogs") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(filename = "figures/plot1.png", plot = plot1, width = 6, height = 4)
ggsave(filename = "figures/plot2.png", plot = plot2, width = 6, height = 4)
unique_case <- distinct_case %>%
group_by(name, gender, birth_year, breed, zipcode) %>%
slice(1) %>%
ungroup()
n_unique <- nrow(unique_case)
log("Before applying the new rule: %d, after %d (%0.2f%% decrease)",
n_distinct,
n_unique,
100 - 100 * n_unique / n_distinct)
write.csv(unique_case, "data/unique_case.csv", row.names = FALSE)
setwd("../BIOS611-A3")
install_if_missing <- function(packages) {
missing_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(missing_packages)) {
install.packages(missing_packages)
}
sapply(packages, require, character.only = TRUE)
}
packages <- c("rmarkdown", "ggplot2", "readr", "tidyverse")
install_if_missing(packages)
library(rmarkdown)
library(ggplot2)
library(readr)
library(tidyverse)
simplify_strings <- function(s){
s <- str_to_lower(s);
s <- str_trim(s);
s <- str_replace_all(s,"[^a-z]+","_")
s
}
ensure_directory <- function(directory){
if(!dir.exists(directory)){
dir.create(directory);
}
}
make_logger <- function(filename, sep="\n"){
if(file.exists(filename)){
file.remote(filename);
}
function(...){
text <- sprintf(...);
cat(text, file=filename, sep=sep, append=T);
}
}
#### Load data ####
setwd("../BIOS611-A3")
source("utils.R")
if (!dir.exists("log")) {
dir.create("log")
}
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
log <- make_logger("log/report.Rmd")
n_data = nrow(data)
complete_case <- data %>%
mutate(across(everything(), ~str_replace_all(., "#VALUE!", NA_character_))) %>%
rename(
name = AnimalName,
gender = AnimalGender,
birth_year = AnimalBirthYear,
breed = BreedName,
zipcode = ZipCode,
issue_date = LicenseIssuedDate,
expiration_date = LicenseExpiredDate,
extract_year = Extract.Year
) %>% drop_na() %>%
filter(
name != "UNKNOWN" & name != "." & name != "NAME NOT PROVIDED"
& name != "NONE" & name != "NAME"
)
n_complete = nrow(complete_case)
log("Before filtering NA cases: %d, after %d (%0.2f%% decrease)",
n_data,
n_complete,
100 - 100 * n_complete / n_data)
distinct_case <- complete_case %>%
distinct()
n_distinct = nrow(distinct_case)
log("Before filtering duplicate cases: %d, after %d (%0.2f%% decrease)",
n_complete,
n_distinct,
100 - 100 * n_distinct / n_complete)
write.csv(distinct_case, "data/distinct_case.csv", row.names = FALSE)
plot1 <- distinct_case %>%
group_by(birth_year) %>%
summarize(count = n()) %>%
arrange(birth_year) %>%
ggplot(aes(x = birth_year, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Dogs Born Each Year", x = "Year of Birth", y = "Number of Dogs") +
theme_minimal() +
#scale_x_continuous(limits = c(min_yr,max_yr)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
threshold <- 1000
plot2 <- distinct_case %>%
group_by(birth_year) %>%
summarize(count = n()) %>%
filter(count > threshold) %>%
arrange(birth_year) %>%
ggplot(aes(x = birth_year, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Dogs Born Each Year: Count > 1000", x = "Year of Birth", y = "Number of Dogs") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(filename = "figures/plot1.png", plot = plot1, width = 6, height = 4)
ggsave(filename = "figures/plot2.png", plot = plot2, width = 6, height = 4)
unique_case <- distinct_case %>%
group_by(name, gender, birth_year, breed, zipcode) %>%
slice(1) %>%
ungroup()
n_unique <- nrow(unique_case)
log("Before applying the new rule: %d, after %d (%0.2f%% decrease)",
n_distinct,
n_unique,
100 - 100 * n_unique / n_distinct)
#### complete case ####
logs <- make_logger("logs/report.Rmd")
#### Load data ####
setwd("../BIOS611-A3")
source("utils.R")
if (!dir.exists("log")) {
dir.create("log")
}
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
logs <- make_logger("logs/report.Rmd")
#### Load data ####
setwd("../BIOS611-A3")
source("utils.R")
if (!dir.exists("logs")) {
dir.create("logs")
}
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
log <- make_logger("logs/report.Rmd")
make_logger <- function(filename, sep="\n"){
if(file.exists(filename)){
file.remote(filename);
}
function(...){
text <- sprintf(...);
cat(text, file=filename, sep=sep, append=T);
}
}
#### complete case ####
log <- make_logger("logs/report.Rmd")
#### Load data ####
setwd("../BIOS611-A3")
source("utils.R")
if (!dir.exists("logs")) {
dir.create("logs")
}
ensure_directory("logs");
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
log <- make_logger("logs/report.Rmd")
make_logger <- function(filename, sep="\n"){
if(file.exists(filename)){
file.remove(filename);
}
function(...){
text <- sprintf(...);
cat(text, file=filename, sep=sep, append=T);
}
}
source("utils.R")
if (!dir.exists("logs")) {
dir.create("logs")
}
ensure_directory("logs");
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
log <- make_logger("logs/report.Rmd")
#### complete case ####
log <- make_logger("logs/report.Rmd")
setwd("../BIOS611-A3")
install_if_missing <- function(packages) {
missing_packages <- packages[!(packages %in% installed.packages()[,"Package"])]
if(length(missing_packages)) {
install.packages(missing_packages)
}
sapply(packages, require, character.only = TRUE)
}
packages <- c("rmarkdown", "ggplot2", "readr", "tidyverse")
install_if_missing(packages)
library(rmarkdown)
library(ggplot2)
library(readr)
library(tidyverse)
simplify_strings <- function(s){
s <- str_to_lower(s);
s <- str_trim(s);
s <- str_replace_all(s,"[^a-z]+","_")
s
}
ensure_directory <- function(directory){
if(!dir.exists(directory)){
dir.create(directory);
}
}
make_logger <- function(filename, sep="\n"){
if(file.exists(filename)){
file.remove(filename);
}
function(...){
text <- sprintf(...);
cat(text, file=filename, sep=sep, append=T);
}
}
#### Load data ####
setwd("../BIOS611-A3")
source("utils.R")
if (!dir.exists("logs")) {
dir.create("logs")
}
ensure_directory("logs");
file_name <- list.files(path = "data/", pattern = "NYC_Dog_Licensing_Dataset_\\d+\\.csv", full.names = TRUE)
if (length(file_name) > 0) {
data <- read.csv(file_name)
print("File loaded successfully.")
} else {
print("No matching file found.")
}
#### complete case ####
log <- make_logger("logs/report.Rmd")
n_data = nrow(data)
complete_case <- data %>%
mutate(across(everything(), ~str_replace_all(., "#VALUE!", NA_character_))) %>%
rename(
name = AnimalName,
gender = AnimalGender,
birth_year = AnimalBirthYear,
breed = BreedName,
zipcode = ZipCode,
issue_date = LicenseIssuedDate,
expiration_date = LicenseExpiredDate,
extract_year = Extract.Year
) %>% drop_na() %>%
filter(
name != "UNKNOWN" & name != "." & name != "NAME NOT PROVIDED"
& name != "NONE" & name != "NAME"
)
n_complete = nrow(complete_case)
log("Before filtering NA cases: %d, after %d (%0.2f%% decrease)",
n_data,
n_complete,
100 - 100 * n_complete / n_data)
distinct_case <- complete_case %>%
distinct()
n_distinct = nrow(distinct_case)
log("Before filtering duplicate cases: %d, after %d (%0.2f%% decrease)",
n_complete,
n_distinct,
100 - 100 * n_distinct / n_complete)
write.csv(distinct_case, "data/distinct_case.csv", row.names = FALSE)
plot1 <- distinct_case %>%
group_by(birth_year) %>%
summarize(count = n()) %>%
arrange(birth_year) %>%
ggplot(aes(x = birth_year, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Dogs Born Each Year", x = "Year of Birth", y = "Number of Dogs") +
theme_minimal() +
#scale_x_continuous(limits = c(min_yr,max_yr)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
threshold <- 1000
plot2 <- distinct_case %>%
group_by(birth_year) %>%
summarize(count = n()) %>%
filter(count > threshold) %>%
arrange(birth_year) %>%
ggplot(aes(x = birth_year, y = count)) +
geom_bar(stat = "identity", fill = "skyblue") +
labs(title = "Number of Dogs Born Each Year: Count > 1000", x = "Year of Birth", y = "Number of Dogs") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggsave(filename = "figures/plot1.png", plot = plot1, width = 6, height = 4)
ggsave(filename = "figures/plot2.png", plot = plot2, width = 6, height = 4)
unique_case <- distinct_case %>%
group_by(name, gender, birth_year, breed, zipcode) %>%
slice(1) %>%
ungroup()
n_unique <- nrow(unique_case)
log("Before applying the new rule: %d, after %d (%0.2f%% decrease)",
n_distinct,
n_unique,
100 - 100 * n_unique / n_distinct)
write.csv(unique_case, "data/unique_case.csv", row.names = FALSE)
setwd("../BIOS611-A3")
unique_case <- read.csv("data/unique_case.csv")
source("utils.R");
num_dogs_year <- unique_case %>%
group_by(birth_year) %>%
summarise(total_count = n())
dogs_name_year <- unique_case %>%
group_by(birth_year, name) %>%
summarise(count = n())
joined_data <- num_dogs_year %>%
left_join(dogs_name_year, by = "birth_year") %>%
mutate(rate = count/total_count) %>%
arrange(desc(rate))
most_popular_1999 <- joined_data %>%
filter(birth_year== 1999) %>%
slice(1)
most_popular_1999
most_popular_2023 <- joined_data %>%
filter(birth_year== 2023) %>%
slice(1)
most_popular_2023
